<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns:mda="urn:oasis:names:tc:xliff:metadata:2.0" srcLang="en-US" trgLang="de-de" version="2.0" xml:space="preserve" xmlns="urn:oasis:names:tc:xliff:document:2.0">
	<file id="1">
		<mda:metadata>
			<mda:metaGroup>
				<mda:meta type="tool-id">mdxliff</mda:meta>
				<mda:meta type="tool-name">mdxliff</mda:meta>
				<mda:meta type="tool-version">1.0-22243b3</mda:meta>
				<mda:meta type="tool-company">Microsoft</mda:meta>
			</mda:metaGroup>
		<mda:metaGroup><mda:meta type="olfilehash">e207e7db061ece3d30134fee0ab89c4a8c5b3c8a</mda:meta><mda:meta type="olfilepath">e2e\test-content-1.md</mda:meta><mda:meta type="oltranslationpriority">ht</mda:meta><mda:meta type="oltranslationtype">Human Translation</mda:meta></mda:metaGroup></mda:metadata>
		<group id="content">
			<unit id="101" translate="yes">
				<segment state="initial">
					<source>ms.ContentId: 526e4f1a-2936-4c61-b3be-d41b4cf9d10f title: About Windows Server Containers</source>
					<target>ms.ContentId: 526e4f1a-2936-4c61-b3be-d41b4cf9d10f title: About Windows Server Containers</target>
				</segment>
			</unit>
			<unit id="102" translate="yes">
				<segment state="initial">
					<source>AdControl events in C</source>
					<target>AdControl events in C</target>
				</segment>
			</unit>
			<unit id="103" translate="yes">
				<segment state="initial">
					<source>AdControl error handling</source>
					<target>AdControl error handling</target>
				</segment>
			</unit>
			<unit id="104" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](monetize/error-handling-in-xamlc-walkthrough.md)</data>
					<data id="id3">
####### </data>
					<data id="id4">[</data>
					<data id="id5">](monetize/error-handling-in-javascript-walkthrough.md)</data>
				</originalData>
				<segment state="initial">
					<source><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Error handling in XAML/C# walkthrough</pc><ph dataRef="id3" id="ph1" /><pc dataRefEnd="id5" dataRefStart="id4" id="p2">Error handling in JavaScript walkthrough</pc></source>
					<target><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Error handling in XAML/C# walkthrough</pc><ph dataRef="id3" id="ph1" /><pc dataRefEnd="id5" dataRefStart="id4" id="p2">Error handling in JavaScript walkthrough</pc></target>
				</segment>
			</unit>
			<unit id="105" translate="yes">
				<segment state="initial">
					<source>Windows Server Containers</source>
					<target>Windows Server Containers</target>
				</segment>
			</unit>
			<unit id="106" translate="yes">
				<segment state="initial">
					<source>Applications fuel innovation in the cloud and mobile era.</source>
					<target>Applications fuel innovation in the cloud and mobile era.</target>
				</segment>
			</unit>
			<unit id="107" translate="yes">
				<segment state="initial">
					<source>Containers, and the ecosystem that is developing around them, will empower software developers to create the next generation of applications experiences.</source>
					<target>Containers, and the ecosystem that is developing around them, will empower software developers to create the next generation of applications experiences.</target>
				</segment>
			</unit>
			<unit id="108" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://youtu.be/Ryx3o0rD5lY )</data>
				</originalData>
				<segment state="initial">
					<source>Watch a short overview: <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Windows-based containers: Modern app development with enterprise-grade control</pc>.</source>
					<target>Watch a short overview: <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Windows-based containers: Modern app development with enterprise-grade control</pc>.</target>
				</segment>
			</unit>
			<unit id="109" translate="yes">
				<segment state="initial">
					<source>What are containers?</source>
					<target>What are containers?</target>
				</segment>
			</unit>
			<unit id="110" translate="yes">
				<segment state="initial">
					<source>They are an isolated, resource controlled, and portable operating environment.</source>
					<target>They are an isolated, resource controlled, and portable operating environment.</target>
				</segment>
			</unit>
			<unit id="111" translate="yes">
				<segment state="initial">
					<source>Basically, a container is an isolated place where an application can run without affecting the rest of the system and without the system affecting the application.</source>
					<target>Basically, a container is an isolated place where an application can run without affecting the rest of the system and without the system affecting the application.</target>
				</segment>
			</unit>
			<unit id="112" translate="yes">
				<segment state="initial">
					<source>Containers are the next evolution in virtualization.</source>
					<target>Containers are the next evolution in virtualization.</target>
				</segment>
			</unit>
			<unit id="113" translate="yes">
				<segment state="initial">
					<source>If you were inside a container, it would look very much like you were inside a freshly installed physical computer or a virtual machine.</source>
					<target>If you were inside a container, it would look very much like you were inside a freshly installed physical computer or a virtual machine.</target>
				</segment>
			</unit>
			<unit id="114" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](https://www.docker.com/)</data>
				</originalData>
				<segment state="initial">
					<source>And, to <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Docker</pc>, a Windows Server Container can be managed in the same way as any other container.</source>
					<target>And, to <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Docker</pc>, a Windows Server Container can be managed in the same way as any other container.</target>
				</segment>
			</unit>
			<unit id="115" translate="yes">
				<segment state="initial">
					<source>Container Fundamentals</source>
					<target>Container Fundamentals</target>
				</segment>
			</unit>
			<unit id="116" translate="yes">
				<segment state="initial">
					<source>When you begin working with containers you will notice many similarities between a container and a virtual machine.</source>
					<target>When you begin working with containers you will notice many similarities between a container and a virtual machine.</target>
				</segment>
			</unit>
			<unit id="117" translate="yes">
				<segment state="initial">
					<source>A container runs an operating system, has a file system and can be accessed over a network just as if it was a physical or virtual computer system.</source>
					<target>A container runs an operating system, has a file system and can be accessed over a network just as if it was a physical or virtual computer system.</target>
				</segment>
			</unit>
			<unit id="118" translate="yes">
				<segment state="initial">
					<source>That said, the technology and concepts behind containers are very different from that of virtual machines.</source>
					<target>That said, the technology and concepts behind containers are very different from that of virtual machines.</target>
				</segment>
			</unit>
			<unit id="119" translate="yes">
				<originalData>
					<data id="id1">[</data>
					<data id="id2">](http://azure.microsoft.com/blog/2015/08/17/containers-docker-windows-and-trends/)</data>
				</originalData>
				<segment state="initial">
					<source><pc dataRefEnd="id2" dataRefStart="id1" id="p1">This blog post</pc> by Mark Russinovich explains containers well.</source>
					<target><pc dataRefEnd="id2" dataRefStart="id1" id="p1">This blog post</pc> by Mark Russinovich explains containers well.</target>
				</segment>
			</unit>
			<unit id="120" translate="yes">
				<segment state="initial">
					<source>The following key concepts will be helpful as you begin creating and working with Windows Server Containers.</source>
					<target>The following key concepts will be helpful as you begin creating and working with Windows Server Containers.</target>
				</segment>
			</unit>
			<unit id="121" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Container Host:</pc> Physical or Virtual computer system configured with the Windows Server Container feature.</source>
					<target><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Container Host:</pc> Physical or Virtual computer system configured with the Windows Server Container feature.</target>
				</segment>
			</unit>
			<unit id="122" translate="yes">
				<segment state="initial">
					<source>The container host will run one or more Windows Server Containers.</source>
					<target>The container host will run one or more Windows Server Containers.</target>
				</segment>
			</unit>
			<unit id="123" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Container Image:</pc> As modifications are made to a containers file system or registry, such as with software installation they are captured in the sandbox.</source>
					<target><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Container Image:</pc> As modifications are made to a containers file system or registry, such as with software installation they are captured in the sandbox.</target>
				</segment>
			</unit>
			<unit id="124" translate="yes">
				<segment state="initial">
					<source>In many cases you may want to capture this state such that new containers can be created that inherit these changes.</source>
					<target>In many cases you may want to capture this state such that new containers can be created that inherit these changes.</target>
				</segment>
			</unit>
			<unit id="125" translate="yes">
				<segment state="initial">
					<source>That’s what an image is – once the container has stopped you can either discard that sandbox or you can convert it into a new container image.</source>
					<target>That’s what an image is – once the container has stopped you can either discard that sandbox or you can convert it into a new container image.</target>
				</segment>
			</unit>
			<unit id="126" translate="yes">
				<segment state="initial">
					<source>For example, let’s imagine that you have deployed a container from the Windows Server Core OS image.</source>
					<target>For example, let’s imagine that you have deployed a container from the Windows Server Core OS image.</target>
				</segment>
			</unit>
			<unit id="127" translate="yes">
				<segment state="initial">
					<source>You then install MySQL into this container.</source>
					<target>You then install MySQL into this container.</target>
				</segment>
			</unit>
			<unit id="128" translate="yes">
				<segment state="initial">
					<source>Creating a new image from this container would act as a deployable version of the container.</source>
					<target>Creating a new image from this container would act as a deployable version of the container.</target>
				</segment>
			</unit>
			<unit id="129" translate="yes">
				<segment state="initial">
					<source>This image would only contain the changes made (MySQL), however would work as a layer on top of the Container OS Image.</source>
					<target>This image would only contain the changes made (MySQL), however would work as a layer on top of the Container OS Image.</target>
				</segment>
			</unit>
			<unit id="130" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Sandbox:</pc> Once a container has been started, all write actions such as file system modifications, registry modifications or software installations are captured in this ‘sandbox’ layer.</source>
					<target><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Sandbox:</pc> Once a container has been started, all write actions such as file system modifications, registry modifications or software installations are captured in this ‘sandbox’ layer.</target>
				</segment>
			</unit>
			<unit id="131" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Container OS Image:</pc> Containers are deployed from images.</source>
					<target><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Container OS Image:</pc> Containers are deployed from images.</target>
				</segment>
			</unit>
			<unit id="132" translate="yes">
				<segment state="initial">
					<source>The container OS image is the first layer in potentially many image layers that make up a container.</source>
					<target>The container OS image is the first layer in potentially many image layers that make up a container.</target>
				</segment>
			</unit>
			<unit id="133" translate="yes">
				<segment state="initial">
					<source>This image provides the operating system environment.</source>
					<target>This image provides the operating system environment.</target>
				</segment>
			</unit>
			<unit id="134" translate="yes">
				<segment state="initial">
					<source>A Container OS Image is Immutable, it cannot be modified.</source>
					<target>A Container OS Image is Immutable, it cannot be modified.</target>
				</segment>
			</unit>
			<unit id="135" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Container Repository:</pc> Each time a container image is created the container image and its dependencies are stored in a local repository.</source>
					<target><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Container Repository:</pc> Each time a container image is created the container image and its dependencies are stored in a local repository.</target>
				</segment>
			</unit>
			<unit id="136" translate="yes">
				<segment state="initial">
					<source>These images can be reused many times on the container host.</source>
					<target>These images can be reused many times on the container host.</target>
				</segment>
			</unit>
			<unit id="137" translate="yes">
				<segment state="initial">
					<source>The container images can also be stored in a public or private repository such as DockerHub so that they can be used across many different container host.</source>
					<target>The container images can also be stored in a public or private repository such as DockerHub so that they can be used across many different container host.</target>
				</segment>
			</unit>
			<unit id="138" translate="yes">
				<originalData>
					<data id="id1">**</data>
					<data id="id2">**</data>
				</originalData>
				<segment state="initial">
					<source><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Container Management Technology:</pc> Windows Server Containers can be managed using both PowerShell and Docker.</source>
					<target><pc dataRefEnd="id2" dataRefStart="id1" id="p1">Container Management Technology:</pc> Windows Server Containers can be managed using both PowerShell and Docker.</target>
				</segment>
			</unit>
			<unit id="139" translate="yes">
				<segment state="initial">
					<source>With either one of these tools you can create new containers, container images as well as manage the container lifecycle.</source>
					<target>With either one of these tools you can create new containers, container images as well as manage the container lifecycle.</target>
				</segment>
			</unit>
			<unit id="140" translate="yes">
				<segment state="initial">
					<source>Containers for Developers</source>
					<target>Containers for Developers</target>
				</segment>
			</unit>
			<unit id="141" translate="yes">
				<segment state="initial">
					<source>From a developer’s desktop to a testing machine to a set of production machines, a Docker image can be created that will deploy identically across any environment in seconds.</source>
					<target>From a developer’s desktop to a testing machine to a set of production machines, a Docker image can be created that will deploy identically across any environment in seconds.</target>
				</segment>
			</unit>
			<unit id="142" translate="yes">
				<segment state="initial">
					<source>This story has created a massive and growing ecosystem of applications packaged in Docker containers, with DockerHub, the public containerized-application registry that Docker maintains, currently publishing more than 180,000 applications in the public community repository.</source>
					<target>This story has created a massive and growing ecosystem of applications packaged in Docker containers, with DockerHub, the public containerized-application registry that Docker maintains, currently publishing more than 180,000 applications in the public community repository.</target>
				</segment>
			</unit>
			<unit id="143" translate="yes">
				<segment state="initial">
					<source>When you containerize an app, only the app and the components needed to run the app are combined into an "image".</source>
					<target>When you containerize an app, only the app and the components needed to run the app are combined into an "image".</target>
				</segment>
			</unit>
			<unit id="144" translate="yes">
				<segment state="initial">
					<source>Containers are then created from this image as you need them.</source>
					<target>Containers are then created from this image as you need them.</target>
				</segment>
			</unit>
			<unit id="145" translate="yes">
				<segment state="initial">
					<source>You can also use an image as a baseline to create another image, making image creation even faster.</source>
					<target>You can also use an image as a baseline to create another image, making image creation even faster.</target>
				</segment>
			</unit>
			<unit id="146" translate="yes">
				<segment state="initial">
					<source>Multiple containers can share the same image, which means containers start very quickly and use fewer resources.</source>
					<target>Multiple containers can share the same image, which means containers start very quickly and use fewer resources.</target>
				</segment>
			</unit>
			<unit id="147" translate="yes">
				<segment state="initial">
					<source>For example, you can use containers to spin up light-weight and portable app components – or ‘micro-services’ – for distributed apps and quickly scale each service separately.</source>
					<target>For example, you can use containers to spin up light-weight and portable app components – or ‘micro-services’ – for distributed apps and quickly scale each service separately.</target>
				</segment>
			</unit>
			<unit id="148" translate="yes">
				<segment state="initial">
					<source>Because the container has everything it needs to run your application, they are very portable and can run on any machine that is running Windows Server 2016.</source>
					<target>Because the container has everything it needs to run your application, they are very portable and can run on any machine that is running Windows Server 2016.</target>
				</segment>
			</unit>
			<unit id="149" translate="yes">
				<segment state="initial">
					<source>You can create and test containers locally, then deploy that same container image to your company's private cloud, public cloud or service provider.</source>
					<target>You can create and test containers locally, then deploy that same container image to your company's private cloud, public cloud or service provider.</target>
				</segment>
			</unit>
			<unit id="150" translate="yes">
				<segment state="initial">
					<source>The natural agility of Containers supports modern app development patterns in large scale, virtualized and cloud environments.</source>
					<target>The natural agility of Containers supports modern app development patterns in large scale, virtualized and cloud environments.</target>
				</segment>
			</unit>
			<unit id="151" translate="yes">
				<segment state="initial">
					<source>With containers, developers can build an app in any language.</source>
					<target>With containers, developers can build an app in any language.</target>
				</segment>
			</unit>
			<unit id="152" translate="yes">
				<segment state="initial">
					<source>These apps are completely portable and can run anywhere - laptop, desktop, server, private cloud, public cloud or service provider - without any code changes.</source>
					<target>These apps are completely portable and can run anywhere - laptop, desktop, server, private cloud, public cloud or service provider - without any code changes.</target>
				</segment>
			</unit>
			<unit id="153" translate="yes">
				<segment state="initial">
					<source>Containers helps developers build and ship higher-quality applications, faster.</source>
					<target>Containers helps developers build and ship higher-quality applications, faster.</target>
				</segment>
			</unit>
			<unit id="154" translate="yes">
				<segment state="initial">
					<source>Containers for IT Professionals</source>
					<target>Containers for IT Professionals</target>
				</segment>
			</unit>
			<unit id="155" translate="yes">
				<segment state="initial">
					<source>IT Professionals can use containers to provide standardized environments for their development, QA, and production teams.</source>
					<target>IT Professionals can use containers to provide standardized environments for their development, QA, and production teams.</target>
				</segment>
			</unit>
			<unit id="156" translate="yes">
				<segment state="initial">
					<source>They no longer have to worry about complex installation and configuration steps.</source>
					<target>They no longer have to worry about complex installation and configuration steps.</target>
				</segment>
			</unit>
			<unit id="157" translate="yes">
				<segment state="initial">
					<source>By using containers, systems administrators abstract away differences in OS installations and underlying infrastructure.</source>
					<target>By using containers, systems administrators abstract away differences in OS installations and underlying infrastructure.</target>
				</segment>
			</unit>
			<unit id="158" translate="yes">
				<segment state="initial">
					<source>Containers help admins create an infrastructure that is simpler to update and maintain.</source>
					<target>Containers help admins create an infrastructure that is simpler to update and maintain.</target>
				</segment>
			</unit>
			<unit id="159" translate="yes">
				<segment state="initial">
					<source>Video Overview</source>
					<target>Video Overview</target>
				</segment>
			</unit>
			<unit id="160" translate="yes">
				<segment state="initial">
					<source>Try Windows Server Containers</source>
					<target>Try Windows Server Containers</target>
				</segment>
			</unit>
			<unit id="161" translate="yes">
				<segment state="initial">
					<source>Get started with Windows Server Containers in Windows Azure</source>
					<target>Get started with Windows Server Containers in Windows Azure</target>
				</segment>
			</unit>
			<unit id="162" translate="yes">
				<segment state="initial">
					<source>Get started with Windows Server Containers Locally</source>
					<target>Get started with Windows Server Containers Locally</target>
				</segment>
			</unit>
			<unit id="163" translate="yes">
				<segment state="initial">
					<source>Back to Container Home</source>
					<target>Back to Container Home</target>
				</segment>
			</unit>
		</group>
	</file>
</xliff>